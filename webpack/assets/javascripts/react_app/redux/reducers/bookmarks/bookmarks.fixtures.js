/* eslint-disable camelcase */
import Immutable from 'seamless-immutable';
import { STATUS } from '../../../constants';

export const initialState = Immutable({
  showModal: false,
});

export const afterRequest = Immutable({
  ...initialState,
  hosts: { errors: null, results: [], status: STATUS.PENDING },
});

export const bookmarks = [
  {
    name: '1111',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 52,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '1122',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 54,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '12121',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 53,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '123',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 48,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '1a',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 51,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '3',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 60,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '321',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 49,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '333',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 50,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '33333',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 55,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '333334',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 56,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '3333341',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 57,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '5',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 65,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '77',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 61,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '7777',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 59,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '8',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 62,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '9',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 63,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: '99',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 64,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: 'a',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 43,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: 'asdas1',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 47,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: 'cvv',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 32,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: 'fv',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 31,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: 'hhhh89',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 66,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: 'sada',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 58,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: 'xyz',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 44,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: 'xyzx',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 45,
    owner_id: 1,
    owner_type: 'User',
  },
  {
    name: 'xyzxu',
    controller: 'hosts',
    query: 'abc',
    public: true,
    id: 46,
    owner_id: 1,
    owner_type: 'User',
  },
];

export const afterSuccess = Immutable({
  ...initialState,
  hosts: { errors: null, results: bookmarks, status: STATUS.RESOLVED },
});

export const afterError = Immutable({
  ...initialState,
  hosts: { errors: 'Oops', results: [], status: STATUS.ERROR },
});
export const afterModalOpen = Immutable({
  ...afterSuccess,
  showModal: true,
  currentQuery: 'hosts ~ awesome',
});
