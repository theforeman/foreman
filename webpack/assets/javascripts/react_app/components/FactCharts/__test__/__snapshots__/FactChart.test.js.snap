// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`factCharts should render closed 1`] = `
<FactChart
  closeModal={[Function]}
  data={
    Object {
      "id": 1,
      "title": "test title",
    }
  }
  factChart={
    Object {
      "chartData": Array [],
    }
  }
  getChartData={[Function]}
  hostsCount={0}
  modalToDisplay={false}
  showModal={[Function]}
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(Symbol.observable): [Function],
      },
      "unsubscribe": [Function],
    }
  }
/>
`;

exports[`factCharts should render open 1`] = `
<FactChart
  closeModal={[Function]}
  data={
    Object {
      "id": 1,
      "title": "test title",
    }
  }
  factChart={
    Object {
      "chartData": Array [],
    }
  }
  getChartData={[Function]}
  hostsCount={0}
  modalToDisplay={false}
  showModal={[Function]}
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(Symbol.observable): [Function],
      },
      "unsubscribe": [Function],
    }
  }
/>
`;
