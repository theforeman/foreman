// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserDropdown render 1`] = `
<VerticalNav.IconBar
  className=""
  collapse={true}
  isOpen={true}
  notification_url="/"
>
  <NavItem
    activeHref=""
    activeKey=""
    className="drawer-pf-trigger dropdown notification-dropdown"
    id="notifications_container"
  >
    <Connect(OnClickOutside(notificationContainer))
      data={
        Object {
          "url": "",
        }
      }
    />
  </NavItem>
  <NavItem
    activeHref=""
    activeKey=""
    className="pf-c-page__header"
    id="account_menu"
  >
    <Dropdown
      className=""
      dropdownItems={
        Array [
          <DropdownItem
            className="user_menuitem"
            href="/"
            onClick={[Function]}
          >
            My Account
          </DropdownItem>,
          <DropdownSeparator />,
        ]
      }
      isOpen={true}
      isPlain={true}
      notification_url="/"
      onSelect={[Function]}
      position="right"
      toggle={
        <DropdownToggle
          onToggle={[Function]}
        >
          <UserAltIcon
            className="user-icon"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
          />
          G L
        </DropdownToggle>
      }
    />
  </NavItem>
</VerticalNav.IconBar>
`;

exports[`UserDropdown render with impersonated by icon 1`] = `
<VerticalNav.IconBar
  className=""
  collapse={true}
  isOpen={true}
  notification_url="/"
>
  <NavItem
    activeHref=""
    activeKey=""
    className="drawer-pf-trigger dropdown notification-dropdown"
    id="notifications_container"
  >
    <Connect(OnClickOutside(notificationContainer))
      data={
        Object {
          "url": "",
        }
      }
    />
  </NavItem>
  <Connect(ImpersonateIcon)
    stopImpersonationUrl=""
  />
  <NavItem
    activeHref=""
    activeKey=""
    className="pf-c-page__header"
    id="account_menu"
  >
    <Dropdown
      className=""
      dropdownItems={
        Array [
          <DropdownItem
            className="user_menuitem"
            href="/"
            onClick={[Function]}
          >
            My Account
          </DropdownItem>,
          <DropdownSeparator />,
        ]
      }
      isOpen={true}
      isPlain={true}
      notification_url="/"
      onSelect={[Function]}
      position="right"
      toggle={
        <DropdownToggle
          onToggle={[Function]}
        >
          <UserAltIcon
            className="user-icon"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
          />
          G L
        </DropdownToggle>
      }
    />
  </NavItem>
</VerticalNav.IconBar>
`;
