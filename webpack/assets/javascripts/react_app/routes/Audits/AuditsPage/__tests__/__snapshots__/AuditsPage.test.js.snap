// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuditsPage rendering render audits page 1`] = `
<PageLayout
  beforeToolbarComponent={null}
  breadcrumbOptions={null}
  customBreadcrumbs={null}
  header="Audits"
  isLoading={false}
  onBookmarkClick={[Function]}
  onSearch={[Function]}
  searchProps={
    Object {
      "autocomplete": Object {
        "id": "searchBar",
        "searchQuery": "",
        "url": "audits/auto_complete_search",
        "useKeyShortcuts": true,
      },
      "bookmarks": Object {
        "canCreate": true,
        "documentationUrl": "4.1.5Searching",
        "url": "/api/bookmarks",
      },
      "controller": "audits",
    }
  }
  searchQuery="search"
  searchable={true}
  toastNotifications={Array []}
  toolbarButtons={
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="btn-docs"
      disabled={false}
      href="/links/manual/4.1.4Auditing"
    >
      <Icon
        name="help"
        type="pf"
      />
       Documentation
    </Button>
  }
>
  <Component
    fetchAndPush={[Function]}
    hasData={true}
    initializeAudits={[Function]}
    isLoading={false}
    location={Object {}}
    searchProps={
      Object {
        "data": Object {
          "autocomplete": Object {
            "id": "searchBar",
            "searchQuery": null,
            "url": "model/auto_complete_search",
            "useKeyShortcuts": true,
          },
          "bookmarks": Object {
            "canCreate": true,
            "documentationUrl": "/doc/url",
            "url": "/api/bookmarks",
          },
          "controller": "models",
        },
      }
    }
    searchable={true}
  />
</PageLayout>
`;

exports[`AuditsPage rendering render audits page w/empty audits 1`] = `
<PageLayout
  beforeToolbarComponent={null}
  breadcrumbOptions={null}
  customBreadcrumbs={null}
  header="Audits"
  isLoading={false}
  onBookmarkClick={[Function]}
  onSearch={[Function]}
  searchProps={
    Object {
      "autocomplete": Object {
        "id": "searchBar",
        "searchQuery": "",
        "url": "audits/auto_complete_search",
        "useKeyShortcuts": true,
      },
      "bookmarks": Object {
        "canCreate": true,
        "documentationUrl": "4.1.5Searching",
        "url": "/api/bookmarks",
      },
      "controller": "audits",
    }
  }
  searchQuery="search"
  searchable={true}
  toastNotifications={Array []}
  toolbarButtons={
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="btn-docs"
      disabled={false}
      href="/links/manual/4.1.4Auditing"
    >
      <Icon
        name="help"
        type="pf"
      />
       Documentation
    </Button>
  }
>
  <Component
    fetchAndPush={[Function]}
    hasData={true}
    hasError={true}
    initializeAudits={[Function]}
    isLoading={false}
    location={Object {}}
    message="no audits"
    searchProps={
      Object {
        "data": Object {
          "autocomplete": Object {
            "id": "searchBar",
            "searchQuery": null,
            "url": "model/auto_complete_search",
            "useKeyShortcuts": true,
          },
          "bookmarks": Object {
            "canCreate": true,
            "documentationUrl": "/doc/url",
            "url": "/api/bookmarks",
          },
          "controller": "models",
        },
      }
    }
    searchable={true}
  />
</PageLayout>
`;

exports[`AuditsPage rendering render audits page w/error 1`] = `
<PageLayout
  beforeToolbarComponent={null}
  breadcrumbOptions={null}
  customBreadcrumbs={null}
  header="Audits"
  isLoading={false}
  onBookmarkClick={[Function]}
  onSearch={[Function]}
  searchProps={
    Object {
      "autocomplete": Object {
        "id": "searchBar",
        "searchQuery": "",
        "url": "audits/auto_complete_search",
        "useKeyShortcuts": true,
      },
      "bookmarks": Object {
        "canCreate": true,
        "documentationUrl": "4.1.5Searching",
        "url": "/api/bookmarks",
      },
      "controller": "audits",
    }
  }
  searchQuery="search"
  searchable={true}
  toastNotifications={Array []}
  toolbarButtons={
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="btn-docs"
      disabled={false}
      href="/links/manual/4.1.4Auditing"
    >
      <Icon
        name="help"
        type="pf"
      />
       Documentation
    </Button>
  }
>
  <Component
    fetchAndPush={[Function]}
    hasData={true}
    hasError={true}
    initializeAudits={[Function]}
    isLoading={false}
    location={Object {}}
    message="some-error"
    searchProps={
      Object {
        "data": Object {
          "autocomplete": Object {
            "id": "searchBar",
            "searchQuery": null,
            "url": "model/auto_complete_search",
            "useKeyShortcuts": true,
          },
          "bookmarks": Object {
            "canCreate": true,
            "documentationUrl": "/doc/url",
            "url": "/api/bookmarks",
          },
          "controller": "models",
        },
      }
    }
    searchable={true}
  />
</PageLayout>
`;

exports[`AuditsPage rendering render loading audits page 1`] = `
<PageLayout
  beforeToolbarComponent={null}
  breadcrumbOptions={null}
  customBreadcrumbs={null}
  header="Audits"
  isLoading={false}
  onBookmarkClick={[Function]}
  onSearch={[Function]}
  searchProps={
    Object {
      "autocomplete": Object {
        "id": "searchBar",
        "searchQuery": "",
        "url": "audits/auto_complete_search",
        "useKeyShortcuts": true,
      },
      "bookmarks": Object {
        "canCreate": true,
        "documentationUrl": "4.1.5Searching",
        "url": "/api/bookmarks",
      },
      "controller": "audits",
    }
  }
  searchQuery="search"
  searchable={true}
  toastNotifications={Array []}
  toolbarButtons={
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      className="btn-docs"
      disabled={false}
      href="/links/manual/4.1.4Auditing"
    >
      <Icon
        name="help"
        type="pf"
      />
       Documentation
    </Button>
  }
>
  <Component
    audits={Array []}
    fetchAndPush={[Function]}
    hasData={true}
    hasError={false}
    initializeAudits={[Function]}
    isLoading={false}
    location={Object {}}
    searchProps={
      Object {
        "data": Object {
          "autocomplete": Object {
            "id": "searchBar",
            "searchQuery": null,
            "url": "model/auto_complete_search",
            "useKeyShortcuts": true,
          },
          "bookmarks": Object {
            "canCreate": true,
            "documentationUrl": "/doc/url",
            "url": "/api/bookmarks",
          },
          "controller": "models",
        },
      }
    }
    searchable={true}
  />
</PageLayout>
`;
