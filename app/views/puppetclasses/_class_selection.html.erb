<div class="row">
  <% if obj.errors[:puppetclasses].any? -%>
    <div class="alert alert-message alert-block alert-error base in fade">
      <a class='close' href='#' data-dismiss="alert">Ã—</a>
      <%= obj.errors[:puppetclasses].map {|e| "<li>#{e}</li>"}.to_s.html_safe %>
    </div>
  <% end -%>
  <div class="span3 classes">
    <h3>Included Classes</h3>
    <%# hidden field to ensure that classes gets removed if none are defined -%>
    <%= hidden_field_tag obj.class.to_s.downcase + "[puppetclass_ids][]" %>
    <ul id="selected_classes">
      <% if authorized_for(:host_editing, :edit_classes) -%>
        <%= render :partial => "puppetclasses/selectedClasses",
          :collection => obj.puppetclasses ,:as => :klass,
          :locals => { :type => obj.class.to_s.downcase, :host => obj } %>
      <% else -%>
        <% obj.puppetclasses.each do |klass| %>
          <li data-original-title="Not authorized to edit classes" rel="twipsy" style='color:black;'><%= h klass.name %></li>
        <% end -%>
      <% end -%>
    </ul>
    <ul>
      <% parent_classes(obj).each do |klass| %>
        <li data-original-title="included already from host group" rel="twipsy" style='color:black;'><%= h klass.name %></li>
      <% end -%>
    </ul>
  </div>

  <div class="span8">
    <h3>Available Classes</h3>
    <div class='control-group'>
      <input placeholder="Filter classes" class="search-query" onkeyup="filter_puppet_classes(this);" type='text'>
    </div>
    <div class="row">
      <%= render "puppetclasses/classes",
        :puppetclasses => (obj.environment.blank? ? Puppetclass.all : obj.environment.puppetclasses),
        :selected_puppet_classes => obj.all_puppetclasses,
        :obj => obj,
        :type => obj.class.to_s.downcase
      %>
    </div>
  </div>
</div>
