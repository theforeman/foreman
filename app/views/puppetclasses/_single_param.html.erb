<%
   # LookupValue#match is generated automatically by Host#lookup_values_attributes=
   # from the name, so don't present errors directly to the user.  Any validation
   # errors should also be visible against the Host#name field.
   if lookup_value.errors[:match].any?
     logger.debug("Ignoring #{lookup_value.inspect} match errors: #{lookup_value.errors[:match]}")
     lookup_value.errors.delete(:match)
   end
%>
<% overridden = lookup_key.overridden?(obj) %>
<% disabled = can_edit_params? && !overridden %>
<% if lookup_key.type != 'GlobalLookupKey' %>
    <tr id="puppetclass_<%= puppetclass.id %>_params[<%= lookup_key.id %>]"
        class="fields <%= 'overridden' if overridden %>">
      <%= content_tag(:td, puppetclass.name, :rowspan => rowspan, :class => "ellipsis") if index == 0 %>
<% else %>
    <tr id="global_params[<%= lookup_key.id %>]">
<% end %>
<td class="ellipsis param_name">
  <%= lookup_key.key %>
</td>
<%= render "common_parameters/overridable_value_column", :obj => obj, :lookup_key => lookup_key, :lookup_value => lookup_value, :overridden => overridden %>
<td class="ca">
  <%= omit_check_box(lookup_key, lookup_value, !overridden) %>
  <%= hidden_lookup_value_fields(lookup_key, lookup_value, !overridden) %>
</td>
</tr>