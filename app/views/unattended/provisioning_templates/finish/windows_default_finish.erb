<%#
kind: finish
name: Windows default finish
model: ProvisioningTemplate
oses:
- Windows Server 2008
- Windows Server 2008 R2
- Windows Server 2012
- Windows Server 2012 R2
- Windows
# Parameters are expected to be set in Foreman (globally or per group/host)
params:
- windowsLicenseKey: ABCDE-ABCDE-ABCDE-ABCDE-ABCDE # Valid Windows license key
- windowsLicenseOwner: Company, INC # Legal owner of the Windows license key
- localAdminAccountDisabled: false
- ntpServer: time.windows.com,other.time.server
- domainAdminAccount: joinuser@domain.com # please do not use the domain administrator
- domainAdminAccountPasswd: Password for the domain Admin account
- computerOU: OU=Computers,CN=domain,CN=com # Place the computer account in specified Organizational Unit
- computerDomain: domain.com # domain to join
- machinePassword: used for unsecure domain join. needs precrated computer object (New-ADComputer)
%>
<%#
# Information about unsecure domain join
# https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/add-computer?view=powershell-5.1#example-9--add-a-computer-to-a-domain-using-predefined-computer-credentials
%>
<%
  # safemode renderer does not support unary negation
  pm_set = @host.puppetmaster.empty? ? false : true
  puppet_enabled = pm_set || host_param('force-puppet') && host_param('force-puppet') == 'true'
  network_location = host_param('networklocation') ? host_param('networklocation') : 'Private'
  foreman_Debug = host_param('foremanDebug') ? host_param('foremanDebug') : 'false'
%>

@echo off
<% unless host_param('localAdminAccountDisabled') -%>
  echo Activating administrator
  net user administrator /active:yes
<% end -%>

<% if @host.pxe_build? %>
  set ctr=0
  set nettimeout=10
<% end -%>

  <%= snippet 'Windows network' %>
  
  <% if host_param('ntpServer') %>
    echo setting time server
    w32tm /config /manualpeerlist:<%= host_param('ntpServer') %> /syncfromflags:manual /update
  <% end %>

  echo sync time
  w32tm /resync
  w32tm /resync

  <% if host_param('computerDomain') -%>
    <% if host_param('domainAdminAccount').present? && host_param('domainAdminAccountPasswd').present? -%>
      echo performing secure domain join
      powershell.exe -OutputFormat text -command Add-Computer -DomainName '<%= host_param('computerDomain') -%>' -Credential (New-Object -TypeName System.Management.Automation.PSCredential '<%= host_param('domainAdminAccount') -%>', (ConvertTo-SecureString -String '<%= host_param('domainAdminAccountPasswd') -%>' -AsPlainText -Force)) <% if host_param('computerOU').present? -%>-OUPath '<%= host_param('computerOU') -%>'<% end -%>
    <% else %>
      <% if host_param('machinePassword').present? %>
        echo performing unsecure domain join
        powershell.exe -OutputFormat text -command Add-Computer -Domain '<%= host_param('computerDomain') -%>' -Options UnsecuredJoin,PasswordPass -Credential (New-Object -TypeName System.Management.Automation.PSCredential $null, (ConvertTo-SecureString -String '<%= host_param('machinePassword') -%>' -AsPlainText -Force))
      <% end %>
    <% end %>
  <% end %>
  
  powershell /c "powercfg /setactive 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c"

  <% if host_param('localAdminAccountDisabled') %>
    echo Disabling %tempAdminUser%
    net user %tempAdminUser% %tempAdminUser% /active:no
  <% end %>

  <% if host_param('http-proxy').present? -%>
    cmd /C "netsh winhttp set proxy <%= host_param('http-proxy') %>:<%= host_param('http-proxy-port') %>"
  <% end %>
  
  <% unless host_param('computerDomain') %>
    powershell /c "Get-NetConnectionProfile -InterfaceAlias \"Ethernet0\" | Set-NetConnectionProfile -NetworkCategory <%= network_location %>"
  <% end %>

  <% if host_param('ansible_user').present? %>
    <%= snippet("Windows configure ansible simon") %>
  <% end %>

  <% if host_param('ping') %>
    cmd /c "netsh advfirewall firewall add rule name=\"Enable IPv4 ICMP\" dir=in protocol=icmpv4 action=allow"
  <% end %>
  
  <% if host_param('remote_desktop') %>
    cmd /c "netsh advfirewall firewall set rule group=\"remote desktop\" new enable=Yes"
    cmd /c "netsh advfirewall firewall set rule group=\"remotedesktop\" new enable=Yes"
  <% end %>

  <% if puppet_enabled %>
    echo get puppet installer 
    powershell /c "wget <%= host_param('win_puppet_source') %> -O C:\puppet-agent-x64-latest.msi"
    echo configure puppet
    powershell /c "md C:\ProgramData\PuppetLabs\puppet\etc"
    powershell /c "echo \"[main]\" | out-file C:\ProgramData\PuppetLabs\puppet\etc\puppet.conf -encoding utf8"
    powershell /c "echo \"server=http://<%= foreman_server_fqdn %>" | add-content C:\ProgramData\PuppetLabs\puppet\etc\puppet.conf -encoding utf8"
    powershell /c "echo \"autoflush=true\" | add-content C:\ProgramData\PuppetLabs\puppet\etc\puppet.conf -encoding utf8"
    echo Installing puppet
    start /wait "" msiexec /qn /i C:\puppet-agent-x64-latest.msi PUPPET_MASTER_SERVER=<%= @host.puppetmaster -%> PUPPET_AGENT_ENVIRONMENT=<%= @host.environment -%>
  <% end %>

  <% unless host_param('noupdates') %>
    echo Updating System
    powershell /c "& {$Updates = (Start-WUScan); Install-WUUpdates -Updates $Updates}"
    powershell /c "& {$Updates = (Start-WUScan); Install-WUUpdates -Updates $Updates}"
    powershell /c "wuauclt.exe /updatenow"
  <% end %>

  <% unless foreman_Debug %>
    echo rebooting in 60 sec
    shutdown /r /t 60

    echo Safely remove wimaging files
    rd /s /q c:\wimaging
    sdelete.exe -accepteula -p 2 c:\Windows\Panther\unattend.xml
    sdelete.exe -accepteula -p 2 C:\Windows\Setup\Scripts\SetupComplete.cmd
    
    echo remove leftover directories
    rd /s /q c:\MININT
    rd /s /q c:\drivers
    rd /s /q c:\updates

    <% if puppet_enabled %>
        echo Safely remove Puppet installer
        sdelete.exe -accepteula -p 2 C:\puppet-agent-x64-latest.msi
    <% end %>    
  
    echo remove deploy directory
    cd c:\
    rd /s /q c:\deploy
    
  <% end -%>
