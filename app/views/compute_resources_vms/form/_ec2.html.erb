<% javascript 'compute_resource', 'lookup_keys' %>
<%= select_f f, :flavor_id, compute_resource.flavors, :id, :to_label %>
<%
   arch ||= nil ; os ||= nil
   images = possible_images(compute_resource, arch, os)
-%>

<div id='image_selection'><%= select_f f, :image_id, images, :uuid, :name,{:include_blank => (images.empty? || images.size == 1) ? false : 'Please Select an Image'}, {:disabled => images.empty? } %></div>

<% security_groups = compute_resource.security_groups %>
<%= selectable_f f, :security_group_ids, security_groups.map{|sg| sg.group_id if sg.vpc_id.nil?}.compact!,
		    {},
		    { :multiple => true, :label => "Security Groups" } %>

<%= selectable_f f, :availability_zone, compute_resource.zones, {:include_blank => "No Preference"} %>
<% if (subnets = compute_resource.subnets).any? -%>
   <%  vpc_sg_hash = Hash.new
       subnet_vpc_hash = Hash.new
     security_groups.map{ |sg| 
	if not sg.vpc_id.nil?
	   vpc_id = sg.vpc_id
	else
	   vpc_id = 'ec2'
	end
        ( vpc_sg_hash[vpc_id] ||= []) << sg.group_id
        subnets.map{|sub| subnet_vpc_hash[sub.subnet_id]=sub.vpc_id}
   } %>
   
   <%= select_f f, :subnet_id, subnets, :subnet_id, :cidr_block,  {:include_blank => "EC2"}, {:label => "Subnet", :onchange => "ec2_vpcSelected(this, #{vpc_sg_hash.to_json}, #{subnet_vpc_hash.to_json});"} %>
<% end -%>

<%= fields_for "#{type}", host do |host_form|
  selectable_f host_form, :managed_ip, {'Public'=>'public', 'Private'=>'private'}, {}, { :label => 'Managed IP' }
end %>
